# num_list=[3,4,5]
# for singleelement in num_list:
#     print(singleelement)


# Iterators
# num_list=[3,4,0]

# iterator = iter(num_list)
# print(next(iterator))
# print(next(iterator))
# print(next(iterator))

#Generators
# def gen_vowel():
#     yield "a"
#     yield "e"   
#     yield "i"
#     yield "o"

#     for i in gen_vowel():
#         print(i)


# def gen_statement():
#     yield "Welcome to my statement"
#     yield "This is my first statement"
#     yield "This is my second statement"

# print_statement = gen_statement()
# print(next(print_statement))
# print(next(print_statement))
# print(next(print_statement))






# create a iterator that print odd number between 1 to 100

# def odd_numbers(): # Define a generator function that will yield odd numbers
#     for num in range(1, 101, 2): # The range function generates numbers starting from 1 to 100, with a step of 2 .This ensures only odd numbers are included.
#         yield num # `yield` returns the current odd number and pauses the function's execution until the next number is requested

# for num in odd_numbers(): # Loop through the numbers generated by the odd_numbers generator function
#     print(num) # Print each odd number


# create a genearator that yields the first 10 numbers in the fibonacci sequence

def fibonacci():
    a, b = 0, 1  # Initialize the first two Fibonacci numbers: 0 and 1
    for _ in range(10):  # Loop 10 times to generate the first 10 numbers
        yield a  # Yield the current Fibonacci number
        a, b = b, a + b  # Update the values of a and b to the next Fibonacci numbers

for num in fibonacci():
    print(num)  # Print each Fibonacci number yielded by the generator